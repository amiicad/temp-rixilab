<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title><%= quiz.title %> | Quiz</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <style>
    /* --- Your existing styles (unchanged layout) --- */
 body {
  background-color: #121212;
  color: #fff;

  /* hide scrollbar visually but keep scrolling allowed */
  scrollbar-width: none;    /* Firefox */
  -ms-overflow-style: none; /* IE 10+ */
}

body::-webkit-scrollbar {
  width: 0px;
  background: transparent;  /* Chrome, Safari, Edge */
}

/* fix modal scrollbar issue */
body.modal-open {
  overflow: hidden !important;  /* prevent main page scroll when modal is open */
}
    .card { background-color: #1f1f1f; border-radius: 12px; border: none; }
    .question-card { transition: all 0.3s ease; }
    .option label { cursor: pointer; }
    .question-image {
      width: 100%;
      max-width: 400px;
      height: 225px;
      object-fit: cover;
      border-radius: 5px;
      margin-top: 10px;
      display: block;
    }
    .btn-custom { color: #fff !important;  }
    .btn-custom:hover { background-color: #ff6600; color: #fff !important; }
    .btn-submit { background-color: #28a745; border-color: #28a745; color: #fff; }
    .btn-submit:hover { background-color: #218838; }
    .timer { font-size: 1.2rem; font-weight: bold; }
    .question-nav {
      max-height: 70vh;
      overflow-y: auto;
      padding: 10px;
      background-color: #1a1a1a;
      border-radius: 10px;
    }
    .question-nav .btn {
      width: 100%;
      margin-bottom: 5px;
      color: #fff;
    }
    .question-nav .not-visited { background-color: #6c757d; }
    .question-nav .visited { background-color: #ffc107; color: #000; }
    .question-nav .answered { background-color: #28a745; }
    .intern-info {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .intern-info img {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      object-fit: cover;
    }

    /* make content non-copyable/selectable globally, but allow interactive controls */
    body, .card, .question-nav, #questionsContainer {
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }
    /* Allow selection on interactive elements so they remain usable */
    button, input, textarea, select, label, .question-card * {
      -webkit-user-select: auto !important;
      -moz-user-select: auto !important;
      -ms-user-select: auto !important;
      user-select: auto !important;
    }

    /* video container styling */
    #videoContainer { display:inline-block; vertical-align: middle; }
    #userVideo { width: 160px; height: 120px; border-radius: 6px; object-fit: cover; background:#000; }

    /* Responsive */
    @media (max-width: 991px) {
      #quizContent { flex-direction: column; }
      #questionsContainer { margin-right: 0 !important; }
      .question-nav { max-height: none; margin-top: 20px; }
    }
   
    @keyframes blink {
      0%, 50%, 100% { opacity: 1; }
      25%, 75% { opacity: 0; }
    }

    .blink {
      animation: blink 1.5s infinite;
    }
    .status-box {
  width: 20px;
  height: 20px;
  border-radius: 4px;
  display: inline-block;
}

  </style>
</head>
<body class="container py-4">

  <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-2">
    <h2 class="text-warning mb-0"><%= quiz.title %></h2>
    <div class="d-flex align-items-center gap-4">
     
      <!-- Instruction trigger left (we will also auto-open it) -->
      <div data-bs-toggle="modal" data-bs-target="#instructionModal2" style="cursor: pointer;">
        Instruction
      </div>


      <div class="timer text-light" id="timer">Time Remaining: 00:00</div>
      <div class="intern-info d-flex align-items-center">
        <img src="<%= intern.img_url %>" alt="Intern Image" class="me-2">
        <div>
          <span class="d-block fw-bold "><%= intern.name.trim().split(" ")[0] %></span>
          <span  style="color: #ff6600; font-size: 0.8em;"><%= intern.intern_id %></span>
        </div>
      </div>
    </div>
  </div>

  <div class="mb-3">
    <p>Attempt: <%= assignment.attemptCount + 1 %> / 2</p>
    <!-- <p>Score: <%= intern.quiz_score %></p> -->
  </div>

  <% if (assignment.attemptCount >= 2) { %>
    <div class="alert alert-warning">
      You have reached the maximum attempts for this quiz.
    </div>
  <% } else { %>

    <div class="row" id="quizContent">

  <!-- MAIN QUIZ AREA (takes most space) -->
  <div class="col-12 col-md-9" >
    <form id="quizForm" method="POST" action="/intern/quiz/<%= quiz._id %>/submit" autocomplete="off">
      <div id="questionsContainer">
        <% quiz.questions.forEach((q, index) => { %>
          <div class="card mb-4 question-card p-3" data-index="<%= index %>" <%= index === 0 ? '' : 'style="display:none;"' %>>
            <h5 class="mb-3 text-white">Q<%= index + 1 %>. <%= q.questionText %></h5>
            <% if (q.image) { %>
              <img src="<%= q.image %>" alt="Question Image" class="question-image mb-3">
            <% } %>
            <% q.options.forEach((opt, i) => { %>
              <div class="form-check mb-2">
                <input class="form-check-input text-white" type="radio" name="answers[<%= index %>]" value="<%= i %>" id="q<%= index %>o<%= i %>">
                <label class="form-check-label text-white" for="q<%= index %>o<%= i %>"><%= opt %></label>
              </div>
            <% }) %>
          </div>
        <% }) %>
      </div>

      <div class="d-flex justify-content-end mt-4 gap-2 flex-wrap">
        <button type="button" class="btn btn-outline-warning btn-custom ms-auto" id="prevBtn" disabled>
          <i class="bi bi-arrow-left"></i> Previous
        </button>
        <button type="button" class="btn btn-outline-warning btn-custom" id="nextBtn">
          Next <i class="bi bi-arrow-right"></i>
        </button>
        <button type="button" class="btn btn-submit" id="submitBtn">Submit Quiz</button>
      </div>
    </form>
  </div>

  <!-- SIDEBAR (small area) -->
  <div class="col-12 col-md-3">
    <div class="question-nav">
      <div class="row g-2">
        <% quiz.questions.forEach((q, index) => { %>
          <div class="col-4 col-md-3">
            <button type="button" class="btn btn-sm not-visited w-100" data-index="<%= index %>">
              Q<%= index + 1 %>
            </button>
          </div>
        <% }) %>
      </div>
    </div>
      <!-- live-user-camera preview (will be filled after permission) -->
      <div id="videoContainer " title="Camera preview (required)" style="display: flex; align-items: center; justify-content: center;"  class="mt-2">
        <video id="userVideo" autoplay playsinline muted class="w-100 " style="border: 1px solid #ff6600; height: 20vh;"></video>
      </div>
      <span class="text-danger text-center blink" style="margin-left: 2rem; margin-top: 1rem !important"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="#fc0000" d="m6.03 12.03l2 3.47l-2.53 3.18L2 12.62zM17 18v-2.71c.88-.39 1.5-1.26 1.5-2.29c0-.57-.2-1.1-.53-1.5l1.97-1.15c1.01-.59 1.36-1.88.77-2.89l-1.38-2.4a2.125 2.125 0 0 0-2.89-.78L8.31 9c-.95.53-1.28 1.75-.73 2.71l1.5 2.6c.55.95 1.78 1.28 2.73.73l1.88-1.08c.25.59.72 1.07 1.31 1.33V18c0 1.1.9 2 2 2h5v-2z"/></svg> <b>You are under Surveillance</b></span>
  </div>

</div>


  <% } %>

  <!-- Instruction Modal (auto-open on page load). Contains Start Quiz button. -->
  <div class="modal fade" id="instructionModal" tabindex="-1" aria-labelledby="instructionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg  " style="margin-top: 1vh;">
      <div class="modal-content text-white bg-dark" style="border:1px solid #ff6600;">
        <div class="modal-header">
          <h5 class="modal-title" id="instructionModalLabel">Instructions</h5>
          <!-- <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> -->
        </div>
        <div class="modal-body">
  <h5 class="fw-bold">General Instructions</h5>
  <ul class="mb-3">
    <li>You will get <strong>2 attempts</strong> for each quiz.</li>
    <li>Only the <strong>highest score</strong> among the attempts will be saved.</li>
    <li>Your <strong>camera will be under constant surveillance</strong> during the quiz.</li>
    <li><strong>Camera permission is mandatory.</strong> You cannot start the quiz without allowing camera access.</li>
    <li>Any type of <strong>unfair means or malpractice</strong> will lead to immediate <strong>disqualification.</strong></li>
  </ul>

  <h5 class="fw-bold">Quiz Structure</h5>
  <ul class="mb-3">
    <li><strong>4 Week Quiz:</strong> 20 Questions | 30 Minutes | Each Question = 1 Mark | Passing = 14/20 (70%)</li>
    <li><strong>6 Week Quiz:</strong> 30 Questions | 45 Minutes | Each Question = 1 Mark | Passing = 21/30 (70%)</li>
    <li><strong>8 Week Quiz:</strong> 40 Questions | 60 Minutes | Each Question = 1 Mark | Passing = 28/40 (70%)</li>
  </ul>

  <h5 class="fw-bold">Additional Rules</h5>
  <ul class="mb-3">
    <li><strong>No negative marking.</strong></li>
    <li>After you <strong>submit the quiz</strong>, your attempt count will increase.</li>
    <li>If time runs out, the quiz will be <strong>auto-submitted.</strong></li>
  </ul>

  <h5 class="fw-bold">Question Navigation Color Guide</h5>
  <ul class="list-unstyled">
  <li class="d-flex align-items-center mb-2">
    <span class="status-box me-2" style="background-color: #6c757d;"></span>
    <span>Not Visited - You have not opened this question.</span>
  </li>
  <li class="d-flex align-items-center mb-2">
    <span class="status-box me-2" style="background-color: #ffc107; border: 1px solid #000;"></span>
    <span>Visited - You viewed the question but did not answer.</span>
  </li>
  <li class="d-flex align-items-center">
    <span class="status-box me-2" style="background-color: #28a745;"></span>
    <span>Answered - You have selected an answer.</span>
  </li>
</ul>


  <p class="mt-3 mb-0"><strong>Note:</strong> Camera access is required. The quiz will start only after you allow camera access and click <em>Start Quiz</em>.</p>
</div>

        <div class="modal-footer">
          <button type="button" id="startQuizBtn" class="btn btn-success">Start Quiz</button>
        </div>
      </div>
    </div>
  </div>
   <!-- Instruction Modal (auto-open on page load). Contains Start Quiz button. -->
  <div class="modal fade" id="instructionModal2" tabindex="-1" aria-labelledby="instructionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered ">
      <div class="modal-content text-white bg-dark" style="border:1px solid #ff6600;">
        <div class="modal-header">
          <h5 class="modal-title" id="instructionModalLabel">Instructions</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
       <div class="modal-body">
  <!-- General Instructions -->
  <h5 class="fw-bold">General Instructions</h5>
  <ul class="mb-3">
    <li>You will get <strong>2 attempts</strong> for each quiz.</li>
    <li>Only the <strong>highest score</strong> among your attempts will be saved.</li>
    <li>Your <strong>camera will be under constant surveillance</strong> during the quiz.</li>
    <li><strong>Camera permission is mandatory.</strong> The quiz will not start without camera access.</li>
    <li>Any type of <strong>unfair means or malpractice</strong> will result in immediate <strong>disqualification.</strong></li>
  </ul>

  <!-- Quiz Structure -->
  <h5 class="fw-bold">Quiz Structure</h5>
  <ul class="mb-3">
    <li><strong>4 Week Quiz:</strong> 20 Questions | 30 Minutes | Each Question = 1 Mark | Passing = 14/20 (70%)</li>
    <li><strong>6 Week Quiz:</strong> 30 Questions | 45 Minutes | Each Question = 1 Mark | Passing = 21/30 (70%)</li>
    <li><strong>8 Week Quiz:</strong> 40 Questions | 60 Minutes | Each Question = 1 Mark | Passing = 28/40 (70%)</li>
  </ul>

  <!-- Rules -->
  <h5 class="fw-bold">Additional Rules</h5>
  <ul class="mb-3">
    <li><strong>No negative marking.</strong></li>
    <li>After you <strong>submit the quiz</strong>, your attempt count will increase.</li>
    <li>If the time ends, the quiz will be <strong>automatically submitted.</strong></li>
  </ul>

  <!-- Color Scheme / Navigation -->
  <h5 class="fw-bold">Question Navigation Color Guide</h5>
  <ul class="list-unstyled">
    <li class="d-flex align-items-center mb-2">
      <span class="status-box me-2" style="background-color: #6c757d;"></span>
      <span>Not Visited - You have not opened this question.</span>
    </li>
    <li class="d-flex align-items-center mb-2">
      <span class="status-box me-2" style="background-color: #ffc107; border: 1px solid #000;"></span>
      <span>Visited - You viewed the question but did not answer.</span>
    </li>
    <li class="d-flex align-items-center">
      <span class="status-box me-2" style="background-color: #28a745;"></span>
      <span>Answered - You have selected an answer.</span>
    </li>
  </ul>

  <!-- <p class="mt-3"><strong>Note:</strong> Camera access is required. The quiz will start only after you allow camera access.</p> -->
</div>

        <div class="modal-footer">
          <button type="button" data-bs-dismiss="modal" class="btn btn-outline-warning">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Camera permission denied modal -->
  <div class="modal fade" id="cameraDeniedModal" tabindex="-1" aria-labelledby="cameraDeniedLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content text-dark">
        <div class="modal-header">
          <h5 class="modal-title" id="cameraDeniedLabel">Camera Permission Required</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
  <h5 class="fw-bold">Camera Access Required</h5>
  <p>We are unable to access your camera. To continue, please allow camera permission in your browser settings.</p>
  <p><strong>Important:</strong> The quiz cannot start without camera access.</p>
  <p>After granting permission, please refresh the page and click <em>Start Quiz</em> again, or allow the camera when prompted.</p>
</div>

        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Submit confirmation modal (custom popup) -->
  <div class="modal fade" id="submitConfirmModal" tabindex="-1" aria-labelledby="submitConfirmLabel" aria-hidden="true">
  <div class="modal-dialog  modal-md" style="margin-top: 5vh;"> <!-- wider & top -->
    <div class="modal-content bg-dark text-white" style="border: 1px solid #ff6600;">
      <div class="modal-header border-bottom border-secondary">
        <h5 class="modal-title" id="submitConfirmLabel">
          <i class="bi bi-exclamation-triangle-fill text-warning me-2"></i> Confirm Quiz Submission
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <p>Are you sure you want to submit the quiz? Once submitted, you will not be able to change your answers.</p>
      </div>

      <div class="modal-footer border-top border-secondary d-flex justify-content-between">
        <button type="button" id="confirmSubmitBtn" class="btn btn-success flex-grow-1 me-2">Yes, Submit</button>
        <button type="button" class="btn btn-secondary flex-grow-1 ms-2" data-bs-dismiss="modal">No, Keep Working</button>
      </div>
    </div>
  </div>
</div>


  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // --- Keep your original logic but with enhancements requested ---
    const questions = document.querySelectorAll('.question-card');
    let currentIndex = 0;
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const submitBtn = document.getElementById('submitBtn');
    const quizForm = document.getElementById('quizForm');
    const navButtons = document.querySelectorAll('.question-nav .btn');

    const answers = Array(questions.length).fill(null);
    const visited = Array(questions.length).fill(false);

    function updateNavButton() {
      navButtons.forEach(btn => btn.classList.remove('not-visited','visited','answered'));
      navButtons.forEach((btn, i) => {
        if (answers[i] !== null) btn.classList.add('answered');
        else if (visited[i]) btn.classList.add('visited');
        else btn.classList.add('not-visited');
      });
    }

    function showQuestion(index) {
      questions.forEach((q, i) => { q.style.display = i === index ? '' : 'none'; });
      prevBtn.disabled = index === 0;
      nextBtn.style.display = index === questions.length - 1 ? 'none' : '';
      visited[index] = true;
      updateNavButton();
    }

    prevBtn.addEventListener('click', () => {
      if (currentIndex > 0) { currentIndex--; showQuestion(currentIndex); }
    });

    nextBtn.addEventListener('click', () => {
      if (currentIndex < questions.length - 1) { currentIndex++; showQuestion(currentIndex); }
    });

    navButtons.forEach(btn => {
      btn.addEventListener('click', () => {
        currentIndex = parseInt(btn.dataset.index);
        showQuestion(currentIndex);
      });
    });

    // original submit listener replaced with custom modal flow:
    submitBtn.addEventListener('click', (e) => {
      // show custom bootstrap modal
      const modal = new bootstrap.Modal(document.getElementById('submitConfirmModal'));
      modal.show();
    });

    document.getElementById('confirmSubmitBtn').addEventListener('click', () => {
      // user confirmed -> submit form
      // ensure any necessary cleanup or flags are set
      // disable auto-submit modal triggers
      document.getElementById('submitConfirmModal').querySelector('.btn-close')?.click();
      quizForm.submit();
    });

    questions.forEach((q, index) => {
      const options = q.querySelectorAll('input[type=radio]');
      options.forEach(opt => {
        opt.addEventListener('change', () => {
          answers[index] = opt.value;
          updateNavButton();
        });
      });
    });

    showQuestion(currentIndex);

    // ===== TIMER =====
    const timerDisplay = document.getElementById('timer');
    const totalTime = parseInt('<%= quizDuration || 10 %>') * 60; // seconds; quizDuration from server (minutes)
    let timeRemaining = totalTime;
    let timerInterval = null;
    let quizStarted = false;
    let autoSubmitting = false;

    function formatTime(sec) {
      const minutes = Math.floor(sec / 60);
      const seconds = sec % 60;
      return `${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}`;
    }

    function updateTimerUI() {
      timerDisplay.innerText = `Time Remaining: ${formatTime(timeRemaining)}`;

    if (timeRemaining < 300) { // less than 5 min
  timerDisplay.style.setProperty('color', 'red', 'important');
} else if (timeRemaining <= 600) { // 5–10 min
  timerDisplay.style.setProperty('color', 'orange', 'important');
} else {
  timerDisplay.style.setProperty('color', '', 'important');
}

    }

    function startTimer() {
      if (timerInterval) clearInterval(timerInterval);
      timerInterval = setInterval(() => {
        if (timeRemaining <= 0) {
          clearInterval(timerInterval);
          // auto-submit immediately WITHOUT showing confirmation modal
          autoSubmitting = true;
          // give a tiny delay to ensure UI updates, then submit
          setTimeout(() => {
            // optionally inform user quickly
            // directly submit form
            quizForm.submit();
            window.href = "/intern"; // redirect after submission
          }, 300);
          return;
        }
        timeRemaining--;
        updateTimerUI();
      }, 1000);
      updateTimerUI();
    }

   // --- Camera / Start Quiz flow ---
const startQuizBtn = document.getElementById('startQuizBtn');
const instructionModalEl = document.getElementById('instructionModal');
const instructionModal = new bootstrap.Modal(instructionModalEl, { backdrop: 'static', keyboard: false });
const cameraDeniedModal = new bootstrap.Modal(document.getElementById('cameraDeniedModal'));
const userVideo = document.getElementById('userVideo');

// auto-open instructions modal on page load
window.addEventListener('load', () => {
  instructionModal.show();
});

// helper: request camera and attach stream
async function requestCamera() {
  try {
    const stream = await navigator.mediaDevices.getUserMedia({ video: { width: 640, height: 480 }, audio: false });
    userVideo.srcObject = stream;
    userVideo.play().catch(()=>{});
    return stream;
  } catch (err) {
    return null;
  }
}
function blockAllShortcuts() {
  document.addEventListener("keydown", function (e) {
    const key = e.key.toLowerCase();

    // --- Block Function Keys ---
    if (key === "f5" || key === "f11") e.preventDefault();

    // --- Block Esc (optional: stops exiting fullscreen) ---
    if (key === "escape") e.preventDefault();

    // --- Block Alt shortcuts (Alt+Tab can't be fully blocked but still prevent) ---
    if (e.altKey) e.preventDefault();

    // --- Block Ctrl / Cmd + any common keys ---
    if (e.ctrlKey || e.metaKey) {
      const blockedKeys = [
        "r", // reload
        "w", // close tab
        "t", // new tab
        "n", // new window
        "p", // print
        "s", // save page
        "a", // select all
        "c", // copy
        "v", // paste
        "x", // cut
        "u", // view source
        "f", // find
        "h"  // history
      ];

      if (blockedKeys.includes(key)) {
        e.preventDefault();
      }
    }
    

    // --- Block Ctrl+Shift+I/J/C (DevTools) ---
    if ((e.ctrlKey || e.metaKey) && e.shiftKey) {
      const devKeys = ["i", "j", "c"];
      if (devKeys.includes(key)) {
        e.preventDefault();
      }
    }
  });
}
document.addEventListener("contextmenu", function(e) {
  e.preventDefault(); // block right-click
  // alert("Right-click is disabled!");
});

async function enableFullscreen() {
  const el = document.documentElement;
  if (el.requestFullscreen) {
    try { await el.requestFullscreen(); } catch (e) {}
  } else if (el.webkitRequestFullscreen) {
    try { el.webkitRequestFullscreen(); } catch(e) {}
  }
   blockAllShortcuts();
}

startQuizBtn.addEventListener('click', async () => {
  startQuizBtn.disabled = true;
  startQuizBtn.innerText = 'Requesting camera...';
  const stream = await requestCamera();
  if (!stream) {
    startQuizBtn.disabled = false;
    startQuizBtn.innerText = 'Start Quiz';
    instructionModal.hide();
    cameraDeniedModal.show();

    // ⛔ Disable Submit Button
    submitBtn.disabled = true;
    submitBtn.style.opacity = "0.5";
    submitBtn.style.cursor = "not-allowed";
    return;
  }

  instructionModal.hide();
  quizStarted = true;

  // ✅ Enter Fullscreen
  enableFullscreen();


  // ✅ If user exits fullscreen, force it back
  document.addEventListener("fullscreenchange", () => {
    if (!document.fullscreenElement && quizStarted) {
      enableFullscreen();
    }
  });

  // ✅ ESC to exit quiz and redirect


  startTimer();
});
 
document.addEventListener('mousedown', function(e) {
  if (e.button === 0) { // left click
    const interactive = e.target.closest('button, input, textarea, select, a, label, .form-check-input, #userVideo');
    if (!interactive) {
      e.preventDefault();    // prevent default browser action
      e.stopPropagation();   // stop event from reaching other listeners
      console.log('Click blocked'); // optional debug
      return false;          // just in case
    }
  }
}, { capture: true });

document.addEventListener('fullscreenchange', () => {
  if (!document.fullscreenElement) {
    // User exited fullscreen (probably pressed ESC)
    window.location.href = '/intern';
  }
});


  </script>
</body>
</html>
  